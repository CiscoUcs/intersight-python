# coding: utf-8
"""
    Cisco Intersight

    Cisco Intersight is a management platform delivered as a service with embedded analytics for your Cisco and 3rd party IT infrastructure. This platform offers an intelligent level of management that enables IT organizations to analyze, simplify, and automate their environments in more advanced ways than the prior generations of tools. Cisco Intersight provides an integrated and intuitive management experience for resources in the traditional data center as well as at the edge. With flexible deployment options to address complex security needs, getting started with Intersight is quick and easy. Cisco Intersight has deep integration with Cisco UCS and HyperFlex systems allowing for remote deployment, configuration, and ongoing maintenance. The model-based deployment works for a single system in a remote location or hundreds of systems in a data center and enables rapid, standardized configuration and deployment. It also streamlines maintaining those systems whether you are working with small or very large configurations.   # noqa: E501

    The version of the OpenAPI document: 1.0.9-1295
    Contact: intersight@cisco.com
    Generated by: https://openapi-generator.tech
"""

from __future__ import absolute_import

import unittest

import intersight
from intersight.api.firmware_api import FirmwareApi  # noqa: E501
from intersight.rest import ApiException


class TestFirmwareApi(unittest.TestCase):
    """FirmwareApi unit test stubs"""
    def setUp(self):
        self.api = intersight.api.firmware_api.FirmwareApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_firmware_distributable(self):
        """Test case for create_firmware_distributable

        Create a 'firmware.Distributable' resource.  # noqa: E501
        """
        pass

    def test_create_firmware_driver_distributable(self):
        """Test case for create_firmware_driver_distributable

        Create a 'firmware.DriverDistributable' resource.  # noqa: E501
        """
        pass

    def test_create_firmware_eula(self):
        """Test case for create_firmware_eula

        Create a 'firmware.Eula' resource.  # noqa: E501
        """
        pass

    def test_create_firmware_server_configuration_utility_distributable(self):
        """Test case for create_firmware_server_configuration_utility_distributable

        Create a 'firmware.ServerConfigurationUtilityDistributable' resource.  # noqa: E501
        """
        pass

    def test_create_firmware_upgrade(self):
        """Test case for create_firmware_upgrade

        Create a 'firmware.Upgrade' resource.  # noqa: E501
        """
        pass

    def test_delete_firmware_distributable(self):
        """Test case for delete_firmware_distributable

        Delete a 'firmware.Distributable' resource.  # noqa: E501
        """
        pass

    def test_delete_firmware_driver_distributable(self):
        """Test case for delete_firmware_driver_distributable

        Delete a 'firmware.DriverDistributable' resource.  # noqa: E501
        """
        pass

    def test_delete_firmware_server_configuration_utility_distributable(self):
        """Test case for delete_firmware_server_configuration_utility_distributable

        Delete a 'firmware.ServerConfigurationUtilityDistributable' resource.  # noqa: E501
        """
        pass

    def test_delete_firmware_upgrade(self):
        """Test case for delete_firmware_upgrade

        Delete a 'firmware.Upgrade' resource.  # noqa: E501
        """
        pass

    def test_get_firmware_distributable_by_moid(self):
        """Test case for get_firmware_distributable_by_moid

        Read a 'firmware.Distributable' resource.  # noqa: E501
        """
        pass

    def test_get_firmware_distributable_list(self):
        """Test case for get_firmware_distributable_list

        Read a 'firmware.Distributable' resource.  # noqa: E501
        """
        pass

    def test_get_firmware_driver_distributable_by_moid(self):
        """Test case for get_firmware_driver_distributable_by_moid

        Read a 'firmware.DriverDistributable' resource.  # noqa: E501
        """
        pass

    def test_get_firmware_driver_distributable_list(self):
        """Test case for get_firmware_driver_distributable_list

        Read a 'firmware.DriverDistributable' resource.  # noqa: E501
        """
        pass

    def test_get_firmware_eula_by_moid(self):
        """Test case for get_firmware_eula_by_moid

        Read a 'firmware.Eula' resource.  # noqa: E501
        """
        pass

    def test_get_firmware_eula_list(self):
        """Test case for get_firmware_eula_list

        Read a 'firmware.Eula' resource.  # noqa: E501
        """
        pass

    def test_get_firmware_running_firmware_by_moid(self):
        """Test case for get_firmware_running_firmware_by_moid

        Read a 'firmware.RunningFirmware' resource.  # noqa: E501
        """
        pass

    def test_get_firmware_running_firmware_list(self):
        """Test case for get_firmware_running_firmware_list

        Read a 'firmware.RunningFirmware' resource.  # noqa: E501
        """
        pass

    def test_get_firmware_server_configuration_utility_distributable_by_moid(
            self):
        """Test case for get_firmware_server_configuration_utility_distributable_by_moid

        Read a 'firmware.ServerConfigurationUtilityDistributable' resource.  # noqa: E501
        """
        pass

    def test_get_firmware_server_configuration_utility_distributable_list(
            self):
        """Test case for get_firmware_server_configuration_utility_distributable_list

        Read a 'firmware.ServerConfigurationUtilityDistributable' resource.  # noqa: E501
        """
        pass

    def test_get_firmware_upgrade_by_moid(self):
        """Test case for get_firmware_upgrade_by_moid

        Read a 'firmware.Upgrade' resource.  # noqa: E501
        """
        pass

    def test_get_firmware_upgrade_list(self):
        """Test case for get_firmware_upgrade_list

        Read a 'firmware.Upgrade' resource.  # noqa: E501
        """
        pass

    def test_get_firmware_upgrade_status_by_moid(self):
        """Test case for get_firmware_upgrade_status_by_moid

        Read a 'firmware.UpgradeStatus' resource.  # noqa: E501
        """
        pass

    def test_get_firmware_upgrade_status_list(self):
        """Test case for get_firmware_upgrade_status_list

        Read a 'firmware.UpgradeStatus' resource.  # noqa: E501
        """
        pass

    def test_patch_firmware_distributable(self):
        """Test case for patch_firmware_distributable

        Update a 'firmware.Distributable' resource.  # noqa: E501
        """
        pass

    def test_patch_firmware_driver_distributable(self):
        """Test case for patch_firmware_driver_distributable

        Update a 'firmware.DriverDistributable' resource.  # noqa: E501
        """
        pass

    def test_patch_firmware_running_firmware(self):
        """Test case for patch_firmware_running_firmware

        Update a 'firmware.RunningFirmware' resource.  # noqa: E501
        """
        pass

    def test_patch_firmware_server_configuration_utility_distributable(self):
        """Test case for patch_firmware_server_configuration_utility_distributable

        Update a 'firmware.ServerConfigurationUtilityDistributable' resource.  # noqa: E501
        """
        pass

    def test_update_firmware_distributable(self):
        """Test case for update_firmware_distributable

        Update a 'firmware.Distributable' resource.  # noqa: E501
        """
        pass

    def test_update_firmware_driver_distributable(self):
        """Test case for update_firmware_driver_distributable

        Update a 'firmware.DriverDistributable' resource.  # noqa: E501
        """
        pass

    def test_update_firmware_running_firmware(self):
        """Test case for update_firmware_running_firmware

        Update a 'firmware.RunningFirmware' resource.  # noqa: E501
        """
        pass

    def test_update_firmware_server_configuration_utility_distributable(self):
        """Test case for update_firmware_server_configuration_utility_distributable

        Update a 'firmware.ServerConfigurationUtilityDistributable' resource.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
