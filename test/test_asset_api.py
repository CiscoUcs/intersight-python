# coding: utf-8
"""
    Cisco Intersight

    Cisco Intersight is a management platform delivered as a service with embedded analytics for your Cisco and 3rd party IT infrastructure. This platform offers an intelligent level of management that enables IT organizations to analyze, simplify, and automate their environments in more advanced ways than the prior generations of tools. Cisco Intersight provides an integrated and intuitive management experience for resources in the traditional data center as well as at the edge. With flexible deployment options to address complex security needs, getting started with Intersight is quick and easy. Cisco Intersight has deep integration with Cisco UCS and HyperFlex systems allowing for remote deployment, configuration, and ongoing maintenance. The model-based deployment works for a single system in a remote location or hundreds of systems in a data center and enables rapid, standardized configuration and deployment. It also streamlines maintaining those systems whether you are working with small or very large configurations.   # noqa: E501

    The version of the OpenAPI document: 1.0.9-1295
    Contact: intersight@cisco.com
    Generated by: https://openapi-generator.tech
"""

from __future__ import absolute_import

import unittest

import intersight
from intersight.api.asset_api import AssetApi  # noqa: E501
from intersight.rest import ApiException


class TestAssetApi(unittest.TestCase):
    """AssetApi unit test stubs"""
    def setUp(self):
        self.api = intersight.api.asset_api.AssetApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_asset_device_claim(self):
        """Test case for create_asset_device_claim

        Create a 'asset.DeviceClaim' resource.  # noqa: E501
        """
        pass

    def test_create_asset_managed_device(self):
        """Test case for create_asset_managed_device

        Create a 'asset.ManagedDevice' resource.  # noqa: E501
        """
        pass

    def test_delete_asset_device_claim(self):
        """Test case for delete_asset_device_claim

        Delete a 'asset.DeviceClaim' resource.  # noqa: E501
        """
        pass

    def test_delete_asset_device_registration(self):
        """Test case for delete_asset_device_registration

        Deletes the resource representing the device connector. All associated REST resources will be deleted. In particular, inventory and operational data associated with this device will be deleted.  # noqa: E501
        """
        pass

    def test_delete_asset_managed_device(self):
        """Test case for delete_asset_managed_device

        Delete a 'asset.ManagedDevice' resource.  # noqa: E501
        """
        pass

    def test_get_asset_cluster_member_by_moid(self):
        """Test case for get_asset_cluster_member_by_moid

        Read a 'asset.ClusterMember' resource.  # noqa: E501
        """
        pass

    def test_get_asset_cluster_member_list(self):
        """Test case for get_asset_cluster_member_list

        Read a 'asset.ClusterMember' resource.  # noqa: E501
        """
        pass

    def test_get_asset_device_configuration_by_moid(self):
        """Test case for get_asset_device_configuration_by_moid

        Read a 'asset.DeviceConfiguration' resource.  # noqa: E501
        """
        pass

    def test_get_asset_device_configuration_list(self):
        """Test case for get_asset_device_configuration_list

        Read a 'asset.DeviceConfiguration' resource.  # noqa: E501
        """
        pass

    def test_get_asset_device_connector_manager_by_moid(self):
        """Test case for get_asset_device_connector_manager_by_moid

        Read a 'asset.DeviceConnectorManager' resource.  # noqa: E501
        """
        pass

    def test_get_asset_device_connector_manager_list(self):
        """Test case for get_asset_device_connector_manager_list

        Read a 'asset.DeviceConnectorManager' resource.  # noqa: E501
        """
        pass

    def test_get_asset_device_contract_information_by_moid(self):
        """Test case for get_asset_device_contract_information_by_moid

        Read a 'asset.DeviceContractInformation' resource.  # noqa: E501
        """
        pass

    def test_get_asset_device_contract_information_list(self):
        """Test case for get_asset_device_contract_information_list

        Read a 'asset.DeviceContractInformation' resource.  # noqa: E501
        """
        pass

    def test_get_asset_device_registration_by_moid(self):
        """Test case for get_asset_device_registration_by_moid

        Read a 'asset.DeviceRegistration' resource.  # noqa: E501
        """
        pass

    def test_get_asset_device_registration_list(self):
        """Test case for get_asset_device_registration_list

        Read a 'asset.DeviceRegistration' resource.  # noqa: E501
        """
        pass

    def test_get_asset_managed_device_by_moid(self):
        """Test case for get_asset_managed_device_by_moid

        Read a 'asset.ManagedDevice' resource.  # noqa: E501
        """
        pass

    def test_get_asset_managed_device_list(self):
        """Test case for get_asset_managed_device_list

        Read a 'asset.ManagedDevice' resource.  # noqa: E501
        """
        pass

    def test_patch_asset_device_configuration(self):
        """Test case for patch_asset_device_configuration

        Update a 'asset.DeviceConfiguration' resource.  # noqa: E501
        """
        pass

    def test_patch_asset_device_contract_information(self):
        """Test case for patch_asset_device_contract_information

        Update a 'asset.DeviceContractInformation' resource.  # noqa: E501
        """
        pass

    def test_patch_asset_device_registration(self):
        """Test case for patch_asset_device_registration

        Updates the resource representing the device connector. For example, this can be used to annotate the device connector resource with user-specified tags.  # noqa: E501
        """
        pass

    def test_patch_asset_managed_device(self):
        """Test case for patch_asset_managed_device

        Update a 'asset.ManagedDevice' resource.  # noqa: E501
        """
        pass

    def test_update_asset_device_configuration(self):
        """Test case for update_asset_device_configuration

        Update a 'asset.DeviceConfiguration' resource.  # noqa: E501
        """
        pass

    def test_update_asset_device_contract_information(self):
        """Test case for update_asset_device_contract_information

        Update a 'asset.DeviceContractInformation' resource.  # noqa: E501
        """
        pass

    def test_update_asset_device_registration(self):
        """Test case for update_asset_device_registration

        Updates the resource representing the device connector. For example, this can be used to annotate the device connector resource with user-specified tags.  # noqa: E501
        """
        pass

    def test_update_asset_managed_device(self):
        """Test case for update_asset_managed_device

        Update a 'asset.ManagedDevice' resource.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
