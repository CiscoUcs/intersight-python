# coding: utf-8
"""
    Cisco Intersight

    Cisco Intersight is a management platform delivered as a service with embedded analytics for your Cisco and 3rd party IT infrastructure. This platform offers an intelligent level of management that enables IT organizations to analyze, simplify, and automate their environments in more advanced ways than the prior generations of tools. Cisco Intersight provides an integrated and intuitive management experience for resources in the traditional data center as well as at the edge. With flexible deployment options to address complex security needs, getting started with Intersight is quick and easy. Cisco Intersight has deep integration with Cisco UCS and HyperFlex systems allowing for remote deployment, configuration, and ongoing maintenance. The model-based deployment works for a single system in a remote location or hundreds of systems in a data center and enables rapid, standardized configuration and deployment. It also streamlines maintaining those systems whether you are working with small or very large configurations.   # noqa: E501

    The version of the OpenAPI document: 1.0.9-1295
    Contact: intersight@cisco.com
    Generated by: https://openapi-generator.tech
"""

from __future__ import absolute_import

import unittest

import intersight
from intersight.api.inventory_api import InventoryApi  # noqa: E501
from intersight.rest import ApiException


class TestInventoryApi(unittest.TestCase):
    """InventoryApi unit test stubs"""
    def setUp(self):
        self.api = intersight.api.inventory_api.InventoryApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_inventory_request(self):
        """Test case for create_inventory_request

        Create a 'inventory.Request' resource.  # noqa: E501
        """
        pass

    def test_get_inventory_device_info_by_moid(self):
        """Test case for get_inventory_device_info_by_moid

        Read a 'inventory.DeviceInfo' resource.  # noqa: E501
        """
        pass

    def test_get_inventory_device_info_list(self):
        """Test case for get_inventory_device_info_list

        Read a 'inventory.DeviceInfo' resource.  # noqa: E501
        """
        pass

    def test_get_inventory_dn_mo_binding_by_moid(self):
        """Test case for get_inventory_dn_mo_binding_by_moid

        Read a 'inventory.DnMoBinding' resource.  # noqa: E501
        """
        pass

    def test_get_inventory_dn_mo_binding_list(self):
        """Test case for get_inventory_dn_mo_binding_list

        Read a 'inventory.DnMoBinding' resource.  # noqa: E501
        """
        pass

    def test_get_inventory_generic_inventory_by_moid(self):
        """Test case for get_inventory_generic_inventory_by_moid

        Read a 'inventory.GenericInventory' resource.  # noqa: E501
        """
        pass

    def test_get_inventory_generic_inventory_holder_by_moid(self):
        """Test case for get_inventory_generic_inventory_holder_by_moid

        Read a 'inventory.GenericInventoryHolder' resource.  # noqa: E501
        """
        pass

    def test_get_inventory_generic_inventory_holder_list(self):
        """Test case for get_inventory_generic_inventory_holder_list

        Read a 'inventory.GenericInventoryHolder' resource.  # noqa: E501
        """
        pass

    def test_get_inventory_generic_inventory_list(self):
        """Test case for get_inventory_generic_inventory_list

        Read a 'inventory.GenericInventory' resource.  # noqa: E501
        """
        pass

    def test_patch_inventory_generic_inventory(self):
        """Test case for patch_inventory_generic_inventory

        Update a 'inventory.GenericInventory' resource.  # noqa: E501
        """
        pass

    def test_patch_inventory_generic_inventory_holder(self):
        """Test case for patch_inventory_generic_inventory_holder

        Update a 'inventory.GenericInventoryHolder' resource.  # noqa: E501
        """
        pass

    def test_update_inventory_generic_inventory(self):
        """Test case for update_inventory_generic_inventory

        Update a 'inventory.GenericInventory' resource.  # noqa: E501
        """
        pass

    def test_update_inventory_generic_inventory_holder(self):
        """Test case for update_inventory_generic_inventory_holder

        Update a 'inventory.GenericInventoryHolder' resource.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
