# coding: utf-8
"""
    Cisco Intersight

    Cisco Intersight is a management platform delivered as a service with embedded analytics for your Cisco and 3rd party IT infrastructure. This platform offers an intelligent level of management that enables IT organizations to analyze, simplify, and automate their environments in more advanced ways than the prior generations of tools. Cisco Intersight provides an integrated and intuitive management experience for resources in the traditional data center as well as at the edge. With flexible deployment options to address complex security needs, getting started with Intersight is quick and easy. Cisco Intersight has deep integration with Cisco UCS and HyperFlex systems allowing for remote deployment, configuration, and ongoing maintenance. The model-based deployment works for a single system in a remote location or hundreds of systems in a data center and enables rapid, standardized configuration and deployment. It also streamlines maintaining those systems whether you are working with small or very large configurations.   # noqa: E501

    The version of the OpenAPI document: 1.0.9-1295
    Contact: intersight@cisco.com
    Generated by: https://openapi-generator.tech
"""

from __future__ import absolute_import

import unittest

import intersight
from intersight.api.hcl_api import HclApi  # noqa: E501
from intersight.rest import ApiException


class TestHclApi(unittest.TestCase):
    """HclApi unit test stubs"""
    def setUp(self):
        self.api = intersight.api.hcl_api.HclApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_hcl_compatibility_status(self):
        """Test case for create_hcl_compatibility_status

        Create a 'hcl.CompatibilityStatus' resource.  # noqa: E501
        """
        pass

    def test_create_hcl_hyperflex_software_compatibility_info(self):
        """Test case for create_hcl_hyperflex_software_compatibility_info

        Create a 'hcl.HyperflexSoftwareCompatibilityInfo' resource.  # noqa: E501
        """
        pass

    def test_create_hcl_supported_driver_name(self):
        """Test case for create_hcl_supported_driver_name

        Create a 'hcl.SupportedDriverName' resource.  # noqa: E501
        """
        pass

    def test_delete_hcl_hyperflex_software_compatibility_info(self):
        """Test case for delete_hcl_hyperflex_software_compatibility_info

        Delete a 'hcl.HyperflexSoftwareCompatibilityInfo' resource.  # noqa: E501
        """
        pass

    def test_get_hcl_driver_image_by_moid(self):
        """Test case for get_hcl_driver_image_by_moid

        Read a 'hcl.DriverImage' resource.  # noqa: E501
        """
        pass

    def test_get_hcl_driver_image_list(self):
        """Test case for get_hcl_driver_image_list

        Read a 'hcl.DriverImage' resource.  # noqa: E501
        """
        pass

    def test_get_hcl_exempted_catalog_by_moid(self):
        """Test case for get_hcl_exempted_catalog_by_moid

        Read a 'hcl.ExemptedCatalog' resource.  # noqa: E501
        """
        pass

    def test_get_hcl_exempted_catalog_list(self):
        """Test case for get_hcl_exempted_catalog_list

        Read a 'hcl.ExemptedCatalog' resource.  # noqa: E501
        """
        pass

    def test_get_hcl_hyperflex_software_compatibility_info_by_moid(self):
        """Test case for get_hcl_hyperflex_software_compatibility_info_by_moid

        Read a 'hcl.HyperflexSoftwareCompatibilityInfo' resource.  # noqa: E501
        """
        pass

    def test_get_hcl_hyperflex_software_compatibility_info_list(self):
        """Test case for get_hcl_hyperflex_software_compatibility_info_list

        Read a 'hcl.HyperflexSoftwareCompatibilityInfo' resource.  # noqa: E501
        """
        pass

    def test_get_hcl_operating_system_by_moid(self):
        """Test case for get_hcl_operating_system_by_moid

        Read a 'hcl.OperatingSystem' resource.  # noqa: E501
        """
        pass

    def test_get_hcl_operating_system_list(self):
        """Test case for get_hcl_operating_system_list

        Read a 'hcl.OperatingSystem' resource.  # noqa: E501
        """
        pass

    def test_get_hcl_operating_system_vendor_by_moid(self):
        """Test case for get_hcl_operating_system_vendor_by_moid

        Read a 'hcl.OperatingSystemVendor' resource.  # noqa: E501
        """
        pass

    def test_get_hcl_operating_system_vendor_list(self):
        """Test case for get_hcl_operating_system_vendor_list

        Read a 'hcl.OperatingSystemVendor' resource.  # noqa: E501
        """
        pass

    def test_get_hcl_service_status_by_moid(self):
        """Test case for get_hcl_service_status_by_moid

        Read a 'hcl.ServiceStatus' resource.  # noqa: E501
        """
        pass

    def test_get_hcl_service_status_list(self):
        """Test case for get_hcl_service_status_list

        Read a 'hcl.ServiceStatus' resource.  # noqa: E501
        """
        pass

    def test_patch_hcl_hyperflex_software_compatibility_info(self):
        """Test case for patch_hcl_hyperflex_software_compatibility_info

        Update a 'hcl.HyperflexSoftwareCompatibilityInfo' resource.  # noqa: E501
        """
        pass

    def test_update_hcl_hyperflex_software_compatibility_info(self):
        """Test case for update_hcl_hyperflex_software_compatibility_info

        Update a 'hcl.HyperflexSoftwareCompatibilityInfo' resource.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
