# coding: utf-8

"""
    UCS Starship API

    This is the UCS Starship REST API

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class TechsupportmanagementTechSupportStatus(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'account_moid': 'str',
        'ancestors': 'list[MoMoRef]',
        'create_time': 'datetime',
        'mod_time': 'datetime',
        'moid': 'str',
        'object_type': 'str',
        'owners': 'list[str]',
        'parent': 'MoMoRef',
        'tags': 'list[MoTag]',
        'id': 'str',
        'device_registration': 'MoMoRef',
        'file_name': 'str',
        'reason': 'str',
        'request_ts': 'datetime',
        'status': 'str',
        'tech_support_request': 'MoMoRef',
        'techsupport_download_url': 'str'
    }

    attribute_map = {
        'account_moid': 'AccountMoid',
        'ancestors': 'Ancestors',
        'create_time': 'CreateTime',
        'mod_time': 'ModTime',
        'moid': 'Moid',
        'object_type': 'ObjectType',
        'owners': 'Owners',
        'parent': 'Parent',
        'tags': 'Tags',
        'id': 'Id',
        'device_registration': 'DeviceRegistration',
        'file_name': 'FileName',
        'reason': 'Reason',
        'request_ts': 'RequestTs',
        'status': 'Status',
        'tech_support_request': 'TechSupportRequest',
        'techsupport_download_url': 'TechsupportDownloadUrl'
    }

    def __init__(self, account_moid=None, ancestors=None, create_time=None, mod_time=None, moid=None, object_type=None, owners=None, parent=None, tags=None, id=None, device_registration=None, file_name=None, reason=None, request_ts=None, status=None, tech_support_request=None, techsupport_download_url=None):
        """
        TechsupportmanagementTechSupportStatus - a model defined in Swagger
        """

        self._account_moid = None
        self._ancestors = None
        self._create_time = None
        self._mod_time = None
        self._moid = None
        self._object_type = None
        self._owners = None
        self._parent = None
        self._tags = None
        self._id = None
        self._device_registration = None
        self._file_name = None
        self._reason = None
        self._request_ts = None
        self._status = None
        self._tech_support_request = None
        self._techsupport_download_url = None

        if account_moid is not None:
          self.account_moid = account_moid
        if ancestors is not None:
          self.ancestors = ancestors
        if create_time is not None:
          self.create_time = create_time
        if mod_time is not None:
          self.mod_time = mod_time
        if moid is not None:
          self.moid = moid
        if object_type is not None:
          self.object_type = object_type
        if owners is not None:
          self.owners = owners
        if parent is not None:
          self.parent = parent
        if tags is not None:
          self.tags = tags
        if id is not None:
          self.id = id
        if device_registration is not None:
          self.device_registration = device_registration
        if file_name is not None:
          self.file_name = file_name
        if reason is not None:
          self.reason = reason
        if request_ts is not None:
          self.request_ts = request_ts
        if status is not None:
          self.status = status
        if tech_support_request is not None:
          self.tech_support_request = tech_support_request
        if techsupport_download_url is not None:
          self.techsupport_download_url = techsupport_download_url

    @property
    def account_moid(self):
        """
        Gets the account_moid of this TechsupportmanagementTechSupportStatus.
        The Account ID for this managed object.  

        :return: The account_moid of this TechsupportmanagementTechSupportStatus.
        :rtype: str
        """
        return self._account_moid

    @account_moid.setter
    def account_moid(self, account_moid):
        """
        Sets the account_moid of this TechsupportmanagementTechSupportStatus.
        The Account ID for this managed object.  

        :param account_moid: The account_moid of this TechsupportmanagementTechSupportStatus.
        :type: str
        """

        self._account_moid = account_moid

    @property
    def ancestors(self):
        """
        Gets the ancestors of this TechsupportmanagementTechSupportStatus.
        Ancestors is an array containing the MO references of the ancestors in the object containment hierarchy. 

        :return: The ancestors of this TechsupportmanagementTechSupportStatus.
        :rtype: list[MoMoRef]
        """
        return self._ancestors

    @ancestors.setter
    def ancestors(self, ancestors):
        """
        Sets the ancestors of this TechsupportmanagementTechSupportStatus.
        Ancestors is an array containing the MO references of the ancestors in the object containment hierarchy. 

        :param ancestors: The ancestors of this TechsupportmanagementTechSupportStatus.
        :type: list[MoMoRef]
        """

        self._ancestors = ancestors

    @property
    def create_time(self):
        """
        Gets the create_time of this TechsupportmanagementTechSupportStatus.
        The time when this managed object was created.  

        :return: The create_time of this TechsupportmanagementTechSupportStatus.
        :rtype: datetime
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """
        Sets the create_time of this TechsupportmanagementTechSupportStatus.
        The time when this managed object was created.  

        :param create_time: The create_time of this TechsupportmanagementTechSupportStatus.
        :type: datetime
        """

        self._create_time = create_time

    @property
    def mod_time(self):
        """
        Gets the mod_time of this TechsupportmanagementTechSupportStatus.
        The time when this managed object was last modified.  

        :return: The mod_time of this TechsupportmanagementTechSupportStatus.
        :rtype: datetime
        """
        return self._mod_time

    @mod_time.setter
    def mod_time(self, mod_time):
        """
        Sets the mod_time of this TechsupportmanagementTechSupportStatus.
        The time when this managed object was last modified.  

        :param mod_time: The mod_time of this TechsupportmanagementTechSupportStatus.
        :type: datetime
        """

        self._mod_time = mod_time

    @property
    def moid(self):
        """
        Gets the moid of this TechsupportmanagementTechSupportStatus.
        A unique identifier of this Managed Object instance.  

        :return: The moid of this TechsupportmanagementTechSupportStatus.
        :rtype: str
        """
        return self._moid

    @moid.setter
    def moid(self, moid):
        """
        Sets the moid of this TechsupportmanagementTechSupportStatus.
        A unique identifier of this Managed Object instance.  

        :param moid: The moid of this TechsupportmanagementTechSupportStatus.
        :type: str
        """

        self._moid = moid

    @property
    def object_type(self):
        """
        Gets the object_type of this TechsupportmanagementTechSupportStatus.
        The fully-qualified type of this managed object, e.g. the class name.  

        :return: The object_type of this TechsupportmanagementTechSupportStatus.
        :rtype: str
        """
        return self._object_type

    @object_type.setter
    def object_type(self, object_type):
        """
        Sets the object_type of this TechsupportmanagementTechSupportStatus.
        The fully-qualified type of this managed object, e.g. the class name.  

        :param object_type: The object_type of this TechsupportmanagementTechSupportStatus.
        :type: str
        """

        self._object_type = object_type

    @property
    def owners(self):
        """
        Gets the owners of this TechsupportmanagementTechSupportStatus.
        An array of owners which represent effective ownership of this object.   

        :return: The owners of this TechsupportmanagementTechSupportStatus.
        :rtype: list[str]
        """
        return self._owners

    @owners.setter
    def owners(self, owners):
        """
        Sets the owners of this TechsupportmanagementTechSupportStatus.
        An array of owners which represent effective ownership of this object.   

        :param owners: The owners of this TechsupportmanagementTechSupportStatus.
        :type: list[str]
        """

        self._owners = owners

    @property
    def parent(self):
        """
        Gets the parent of this TechsupportmanagementTechSupportStatus.
        The direct ancestor of this managed object in the containment hierarchy. 

        :return: The parent of this TechsupportmanagementTechSupportStatus.
        :rtype: MoMoRef
        """
        return self._parent

    @parent.setter
    def parent(self, parent):
        """
        Sets the parent of this TechsupportmanagementTechSupportStatus.
        The direct ancestor of this managed object in the containment hierarchy. 

        :param parent: The parent of this TechsupportmanagementTechSupportStatus.
        :type: MoMoRef
        """

        self._parent = parent

    @property
    def tags(self):
        """
        Gets the tags of this TechsupportmanagementTechSupportStatus.
        An array of tags, which allow to add key, value meta-data to managed objects.   

        :return: The tags of this TechsupportmanagementTechSupportStatus.
        :rtype: list[MoTag]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """
        Sets the tags of this TechsupportmanagementTechSupportStatus.
        An array of tags, which allow to add key, value meta-data to managed objects.   

        :param tags: The tags of this TechsupportmanagementTechSupportStatus.
        :type: list[MoTag]
        """

        self._tags = tags

    @property
    def id(self):
        """
        Gets the id of this TechsupportmanagementTechSupportStatus.
        A unique identifier of this Managed Object instance.  

        :return: The id of this TechsupportmanagementTechSupportStatus.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this TechsupportmanagementTechSupportStatus.
        A unique identifier of this Managed Object instance.  

        :param id: The id of this TechsupportmanagementTechSupportStatus.
        :type: str
        """

        self._id = id

    @property
    def device_registration(self):
        """
        Gets the device_registration of this TechsupportmanagementTechSupportStatus.

        :return: The device_registration of this TechsupportmanagementTechSupportStatus.
        :rtype: MoMoRef
        """
        return self._device_registration

    @device_registration.setter
    def device_registration(self, device_registration):
        """
        Sets the device_registration of this TechsupportmanagementTechSupportStatus.

        :param device_registration: The device_registration of this TechsupportmanagementTechSupportStatus.
        :type: MoMoRef
        """

        self._device_registration = device_registration

    @property
    def file_name(self):
        """
        Gets the file_name of this TechsupportmanagementTechSupportStatus.
        Techsupport file name    

        :return: The file_name of this TechsupportmanagementTechSupportStatus.
        :rtype: str
        """
        return self._file_name

    @file_name.setter
    def file_name(self, file_name):
        """
        Sets the file_name of this TechsupportmanagementTechSupportStatus.
        Techsupport file name    

        :param file_name: The file_name of this TechsupportmanagementTechSupportStatus.
        :type: str
        """

        self._file_name = file_name

    @property
    def reason(self):
        """
        Gets the reason of this TechsupportmanagementTechSupportStatus.
        Reason for techsupport failure, if any  

        :return: The reason of this TechsupportmanagementTechSupportStatus.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """
        Sets the reason of this TechsupportmanagementTechSupportStatus.
        Reason for techsupport failure, if any  

        :param reason: The reason of this TechsupportmanagementTechSupportStatus.
        :type: str
        """

        self._reason = reason

    @property
    def request_ts(self):
        """
        Gets the request_ts of this TechsupportmanagementTechSupportStatus.
        Indicates the time at which the techsupport request was initiated  

        :return: The request_ts of this TechsupportmanagementTechSupportStatus.
        :rtype: datetime
        """
        return self._request_ts

    @request_ts.setter
    def request_ts(self, request_ts):
        """
        Sets the request_ts of this TechsupportmanagementTechSupportStatus.
        Indicates the time at which the techsupport request was initiated  

        :param request_ts: The request_ts of this TechsupportmanagementTechSupportStatus.
        :type: datetime
        """

        self._request_ts = request_ts

    @property
    def status(self):
        """
        Gets the status of this TechsupportmanagementTechSupportStatus.
        Status of techsupport collection. Valid values are Pending, CollectionInProgress, CollectionFailed, CollectionComplete, UploadInProgress, UploadPartsComplete, UploadFailed and Completed. The final status will be either CollectionFailed or UploadFailed if there is a failure and Completed if the request completed successfully and the file was uploaded to S3. All the remaining status values indicates the progress of techsupport collection.  

        :return: The status of this TechsupportmanagementTechSupportStatus.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """
        Sets the status of this TechsupportmanagementTechSupportStatus.
        Status of techsupport collection. Valid values are Pending, CollectionInProgress, CollectionFailed, CollectionComplete, UploadInProgress, UploadPartsComplete, UploadFailed and Completed. The final status will be either CollectionFailed or UploadFailed if there is a failure and Completed if the request completed successfully and the file was uploaded to S3. All the remaining status values indicates the progress of techsupport collection.  

        :param status: The status of this TechsupportmanagementTechSupportStatus.
        :type: str
        """

        self._status = status

    @property
    def tech_support_request(self):
        """
        Gets the tech_support_request of this TechsupportmanagementTechSupportStatus.

        :return: The tech_support_request of this TechsupportmanagementTechSupportStatus.
        :rtype: MoMoRef
        """
        return self._tech_support_request

    @tech_support_request.setter
    def tech_support_request(self, tech_support_request):
        """
        Sets the tech_support_request of this TechsupportmanagementTechSupportStatus.

        :param tech_support_request: The tech_support_request of this TechsupportmanagementTechSupportStatus.
        :type: MoMoRef
        """

        self._tech_support_request = tech_support_request

    @property
    def techsupport_download_url(self):
        """
        Gets the techsupport_download_url of this TechsupportmanagementTechSupportStatus.
        The Url to download the techsupport file    

        :return: The techsupport_download_url of this TechsupportmanagementTechSupportStatus.
        :rtype: str
        """
        return self._techsupport_download_url

    @techsupport_download_url.setter
    def techsupport_download_url(self, techsupport_download_url):
        """
        Sets the techsupport_download_url of this TechsupportmanagementTechSupportStatus.
        The Url to download the techsupport file    

        :param techsupport_download_url: The techsupport_download_url of this TechsupportmanagementTechSupportStatus.
        :type: str
        """

        self._techsupport_download_url = techsupport_download_url

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, TechsupportmanagementTechSupportStatus):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
