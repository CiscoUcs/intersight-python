# coding: utf-8
"""
    Cisco Intersight

    Cisco Intersight is a management platform delivered as a service with embedded analytics for your Cisco and 3rd party IT infrastructure. This platform offers an intelligent level of management that enables IT organizations to analyze, simplify, and automate their environments in more advanced ways than the prior generations of tools. Cisco Intersight provides an integrated and intuitive management experience for resources in the traditional data center as well as at the edge. With flexible deployment options to address complex security needs, getting started with Intersight is quick and easy. Cisco Intersight has deep integration with Cisco UCS and HyperFlex systems allowing for remote deployment, configuration, and ongoing maintenance. The model-based deployment works for a single system in a remote location or hundreds of systems in a data center and enables rapid, standardized configuration and deployment. It also streamlines maintaining those systems whether you are working with small or very large configurations.   # noqa: E501

    The version of the OpenAPI document: 1.0.9-1295
    Contact: intersight@cisco.com
    Generated by: https://openapi-generator.tech
"""

import pprint
import re  # noqa: F401

import six

from intersight.configuration import Configuration


class NiaapiSoftwareEolAllOf(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'affected_versions': 'str',
        'announcement_date': 'datetime',
        'announcement_date_epoch': 'int',
        'bulletin_no': 'str',
        'description': 'str',
        'endof_new_service_attachment_date': 'datetime',
        'endof_new_service_attachment_date_epoch': 'int',
        'endof_service_contract_renewal_date': 'datetime',
        'endof_service_contract_renewal_date_epoch': 'int',
        'endof_sw_maintenance_date': 'datetime',
        'endof_sw_maintenance_date_epoch': 'int',
        'headline': 'str',
        'last_dateof_support': 'datetime',
        'last_dateof_support_epoch': 'int',
        'last_ship_date': 'datetime',
        'last_ship_date_epoch': 'int',
        'migration_url': 'str',
        'software_eol_url': 'str'
    }

    attribute_map = {
        'affected_versions': 'AffectedVersions',
        'announcement_date': 'AnnouncementDate',
        'announcement_date_epoch': 'AnnouncementDateEpoch',
        'bulletin_no': 'BulletinNo',
        'description': 'Description',
        'endof_new_service_attachment_date': 'EndofNewServiceAttachmentDate',
        'endof_new_service_attachment_date_epoch':
        'EndofNewServiceAttachmentDateEpoch',
        'endof_service_contract_renewal_date':
        'EndofServiceContractRenewalDate',
        'endof_service_contract_renewal_date_epoch':
        'EndofServiceContractRenewalDateEpoch',
        'endof_sw_maintenance_date': 'EndofSwMaintenanceDate',
        'endof_sw_maintenance_date_epoch': 'EndofSwMaintenanceDateEpoch',
        'headline': 'Headline',
        'last_dateof_support': 'LastDateofSupport',
        'last_dateof_support_epoch': 'LastDateofSupportEpoch',
        'last_ship_date': 'LastShipDate',
        'last_ship_date_epoch': 'LastShipDateEpoch',
        'migration_url': 'MigrationUrl',
        'software_eol_url': 'SoftwareEolUrl'
    }

    def __init__(self,
                 affected_versions=None,
                 announcement_date=None,
                 announcement_date_epoch=None,
                 bulletin_no=None,
                 description=None,
                 endof_new_service_attachment_date=None,
                 endof_new_service_attachment_date_epoch=None,
                 endof_service_contract_renewal_date=None,
                 endof_service_contract_renewal_date_epoch=None,
                 endof_sw_maintenance_date=None,
                 endof_sw_maintenance_date_epoch=None,
                 headline=None,
                 last_dateof_support=None,
                 last_dateof_support_epoch=None,
                 last_ship_date=None,
                 last_ship_date_epoch=None,
                 migration_url=None,
                 software_eol_url=None,
                 local_vars_configuration=None):  # noqa: E501
        """NiaapiSoftwareEolAllOf - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._affected_versions = None
        self._announcement_date = None
        self._announcement_date_epoch = None
        self._bulletin_no = None
        self._description = None
        self._endof_new_service_attachment_date = None
        self._endof_new_service_attachment_date_epoch = None
        self._endof_service_contract_renewal_date = None
        self._endof_service_contract_renewal_date_epoch = None
        self._endof_sw_maintenance_date = None
        self._endof_sw_maintenance_date_epoch = None
        self._headline = None
        self._last_dateof_support = None
        self._last_dateof_support_epoch = None
        self._last_ship_date = None
        self._last_ship_date_epoch = None
        self._migration_url = None
        self._software_eol_url = None
        self.discriminator = None

        if affected_versions is not None:
            self.affected_versions = affected_versions
        if announcement_date is not None:
            self.announcement_date = announcement_date
        if announcement_date_epoch is not None:
            self.announcement_date_epoch = announcement_date_epoch
        if bulletin_no is not None:
            self.bulletin_no = bulletin_no
        if description is not None:
            self.description = description
        if endof_new_service_attachment_date is not None:
            self.endof_new_service_attachment_date = endof_new_service_attachment_date
        if endof_new_service_attachment_date_epoch is not None:
            self.endof_new_service_attachment_date_epoch = endof_new_service_attachment_date_epoch
        if endof_service_contract_renewal_date is not None:
            self.endof_service_contract_renewal_date = endof_service_contract_renewal_date
        if endof_service_contract_renewal_date_epoch is not None:
            self.endof_service_contract_renewal_date_epoch = endof_service_contract_renewal_date_epoch
        if endof_sw_maintenance_date is not None:
            self.endof_sw_maintenance_date = endof_sw_maintenance_date
        if endof_sw_maintenance_date_epoch is not None:
            self.endof_sw_maintenance_date_epoch = endof_sw_maintenance_date_epoch
        if headline is not None:
            self.headline = headline
        if last_dateof_support is not None:
            self.last_dateof_support = last_dateof_support
        if last_dateof_support_epoch is not None:
            self.last_dateof_support_epoch = last_dateof_support_epoch
        if last_ship_date is not None:
            self.last_ship_date = last_ship_date
        if last_ship_date_epoch is not None:
            self.last_ship_date_epoch = last_ship_date_epoch
        if migration_url is not None:
            self.migration_url = migration_url
        if software_eol_url is not None:
            self.software_eol_url = software_eol_url

    @property
    def affected_versions(self):
        """Gets the affected_versions of this NiaapiSoftwareEolAllOf.  # noqa: E501

        String contains the Release versions affected by this notice, seperated by comma.    # noqa: E501

        :return: The affected_versions of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :rtype: str
        """
        return self._affected_versions

    @affected_versions.setter
    def affected_versions(self, affected_versions):
        """Sets the affected_versions of this NiaapiSoftwareEolAllOf.

        String contains the Release versions affected by this notice, seperated by comma.    # noqa: E501

        :param affected_versions: The affected_versions of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :type: str
        """

        self._affected_versions = affected_versions

    @property
    def announcement_date(self):
        """Gets the announcement_date of this NiaapiSoftwareEolAllOf.  # noqa: E501

        Date time of this notice Announced.    # noqa: E501

        :return: The announcement_date of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :rtype: datetime
        """
        return self._announcement_date

    @announcement_date.setter
    def announcement_date(self, announcement_date):
        """Sets the announcement_date of this NiaapiSoftwareEolAllOf.

        Date time of this notice Announced.    # noqa: E501

        :param announcement_date: The announcement_date of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :type: datetime
        """

        self._announcement_date = announcement_date

    @property
    def announcement_date_epoch(self):
        """Gets the announcement_date_epoch of this NiaapiSoftwareEolAllOf.  # noqa: E501

        Epoch time of this notice Announced.    # noqa: E501

        :return: The announcement_date_epoch of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :rtype: int
        """
        return self._announcement_date_epoch

    @announcement_date_epoch.setter
    def announcement_date_epoch(self, announcement_date_epoch):
        """Sets the announcement_date_epoch of this NiaapiSoftwareEolAllOf.

        Epoch time of this notice Announced.    # noqa: E501

        :param announcement_date_epoch: The announcement_date_epoch of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :type: int
        """

        self._announcement_date_epoch = announcement_date_epoch

    @property
    def bulletin_no(self):
        """Gets the bulletin_no of this NiaapiSoftwareEolAllOf.  # noqa: E501

        The bulletinno of this software release end of life notice.    # noqa: E501

        :return: The bulletin_no of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :rtype: str
        """
        return self._bulletin_no

    @bulletin_no.setter
    def bulletin_no(self, bulletin_no):
        """Sets the bulletin_no of this NiaapiSoftwareEolAllOf.

        The bulletinno of this software release end of life notice.    # noqa: E501

        :param bulletin_no: The bulletin_no of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :type: str
        """

        self._bulletin_no = bulletin_no

    @property
    def description(self):
        """Gets the description of this NiaapiSoftwareEolAllOf.  # noqa: E501

        The description of this software release end of life notice.    # noqa: E501

        :return: The description of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this NiaapiSoftwareEolAllOf.

        The description of this software release end of life notice.    # noqa: E501

        :param description: The description of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def endof_new_service_attachment_date(self):
        """Gets the endof_new_service_attachment_date of this NiaapiSoftwareEolAllOf.  # noqa: E501

        Date time of End of New service attachment .    # noqa: E501

        :return: The endof_new_service_attachment_date of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :rtype: datetime
        """
        return self._endof_new_service_attachment_date

    @endof_new_service_attachment_date.setter
    def endof_new_service_attachment_date(self,
                                          endof_new_service_attachment_date):
        """Sets the endof_new_service_attachment_date of this NiaapiSoftwareEolAllOf.

        Date time of End of New service attachment .    # noqa: E501

        :param endof_new_service_attachment_date: The endof_new_service_attachment_date of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :type: datetime
        """

        self._endof_new_service_attachment_date = endof_new_service_attachment_date

    @property
    def endof_new_service_attachment_date_epoch(self):
        """Gets the endof_new_service_attachment_date_epoch of this NiaapiSoftwareEolAllOf.  # noqa: E501

        Epoch time of End of New service attachment .    # noqa: E501

        :return: The endof_new_service_attachment_date_epoch of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :rtype: int
        """
        return self._endof_new_service_attachment_date_epoch

    @endof_new_service_attachment_date_epoch.setter
    def endof_new_service_attachment_date_epoch(
            self, endof_new_service_attachment_date_epoch):
        """Sets the endof_new_service_attachment_date_epoch of this NiaapiSoftwareEolAllOf.

        Epoch time of End of New service attachment .    # noqa: E501

        :param endof_new_service_attachment_date_epoch: The endof_new_service_attachment_date_epoch of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :type: int
        """

        self._endof_new_service_attachment_date_epoch = endof_new_service_attachment_date_epoch

    @property
    def endof_service_contract_renewal_date(self):
        """Gets the endof_service_contract_renewal_date of this NiaapiSoftwareEolAllOf.  # noqa: E501

        Date time of End of Renewal of service contract .    # noqa: E501

        :return: The endof_service_contract_renewal_date of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :rtype: datetime
        """
        return self._endof_service_contract_renewal_date

    @endof_service_contract_renewal_date.setter
    def endof_service_contract_renewal_date(
            self, endof_service_contract_renewal_date):
        """Sets the endof_service_contract_renewal_date of this NiaapiSoftwareEolAllOf.

        Date time of End of Renewal of service contract .    # noqa: E501

        :param endof_service_contract_renewal_date: The endof_service_contract_renewal_date of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :type: datetime
        """

        self._endof_service_contract_renewal_date = endof_service_contract_renewal_date

    @property
    def endof_service_contract_renewal_date_epoch(self):
        """Gets the endof_service_contract_renewal_date_epoch of this NiaapiSoftwareEolAllOf.  # noqa: E501

        Epoch time of End of Renewal of service contract .    # noqa: E501

        :return: The endof_service_contract_renewal_date_epoch of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :rtype: int
        """
        return self._endof_service_contract_renewal_date_epoch

    @endof_service_contract_renewal_date_epoch.setter
    def endof_service_contract_renewal_date_epoch(
            self, endof_service_contract_renewal_date_epoch):
        """Sets the endof_service_contract_renewal_date_epoch of this NiaapiSoftwareEolAllOf.

        Epoch time of End of Renewal of service contract .    # noqa: E501

        :param endof_service_contract_renewal_date_epoch: The endof_service_contract_renewal_date_epoch of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :type: int
        """

        self._endof_service_contract_renewal_date_epoch = endof_service_contract_renewal_date_epoch

    @property
    def endof_sw_maintenance_date(self):
        """Gets the endof_sw_maintenance_date of this NiaapiSoftwareEolAllOf.  # noqa: E501

        Date time of End of Maintenance.    # noqa: E501

        :return: The endof_sw_maintenance_date of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :rtype: datetime
        """
        return self._endof_sw_maintenance_date

    @endof_sw_maintenance_date.setter
    def endof_sw_maintenance_date(self, endof_sw_maintenance_date):
        """Sets the endof_sw_maintenance_date of this NiaapiSoftwareEolAllOf.

        Date time of End of Maintenance.    # noqa: E501

        :param endof_sw_maintenance_date: The endof_sw_maintenance_date of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :type: datetime
        """

        self._endof_sw_maintenance_date = endof_sw_maintenance_date

    @property
    def endof_sw_maintenance_date_epoch(self):
        """Gets the endof_sw_maintenance_date_epoch of this NiaapiSoftwareEolAllOf.  # noqa: E501

        Epoch time of End of Maintenance.    # noqa: E501

        :return: The endof_sw_maintenance_date_epoch of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :rtype: int
        """
        return self._endof_sw_maintenance_date_epoch

    @endof_sw_maintenance_date_epoch.setter
    def endof_sw_maintenance_date_epoch(self, endof_sw_maintenance_date_epoch):
        """Sets the endof_sw_maintenance_date_epoch of this NiaapiSoftwareEolAllOf.

        Epoch time of End of Maintenance.    # noqa: E501

        :param endof_sw_maintenance_date_epoch: The endof_sw_maintenance_date_epoch of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :type: int
        """

        self._endof_sw_maintenance_date_epoch = endof_sw_maintenance_date_epoch

    @property
    def headline(self):
        """Gets the headline of this NiaapiSoftwareEolAllOf.  # noqa: E501

        The title of this software release end of life notice.    # noqa: E501

        :return: The headline of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :rtype: str
        """
        return self._headline

    @headline.setter
    def headline(self, headline):
        """Sets the headline of this NiaapiSoftwareEolAllOf.

        The title of this software release end of life notice.    # noqa: E501

        :param headline: The headline of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :type: str
        """

        self._headline = headline

    @property
    def last_dateof_support(self):
        """Gets the last_dateof_support of this NiaapiSoftwareEolAllOf.  # noqa: E501

        Date time of Last day of Support .    # noqa: E501

        :return: The last_dateof_support of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :rtype: datetime
        """
        return self._last_dateof_support

    @last_dateof_support.setter
    def last_dateof_support(self, last_dateof_support):
        """Sets the last_dateof_support of this NiaapiSoftwareEolAllOf.

        Date time of Last day of Support .    # noqa: E501

        :param last_dateof_support: The last_dateof_support of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :type: datetime
        """

        self._last_dateof_support = last_dateof_support

    @property
    def last_dateof_support_epoch(self):
        """Gets the last_dateof_support_epoch of this NiaapiSoftwareEolAllOf.  # noqa: E501

        Epoch time of Last day of Support .    # noqa: E501

        :return: The last_dateof_support_epoch of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :rtype: int
        """
        return self._last_dateof_support_epoch

    @last_dateof_support_epoch.setter
    def last_dateof_support_epoch(self, last_dateof_support_epoch):
        """Sets the last_dateof_support_epoch of this NiaapiSoftwareEolAllOf.

        Epoch time of Last day of Support .    # noqa: E501

        :param last_dateof_support_epoch: The last_dateof_support_epoch of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :type: int
        """

        self._last_dateof_support_epoch = last_dateof_support_epoch

    @property
    def last_ship_date(self):
        """Gets the last_ship_date of this NiaapiSoftwareEolAllOf.  # noqa: E501

        Date time of Lastship Date.    # noqa: E501

        :return: The last_ship_date of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :rtype: datetime
        """
        return self._last_ship_date

    @last_ship_date.setter
    def last_ship_date(self, last_ship_date):
        """Sets the last_ship_date of this NiaapiSoftwareEolAllOf.

        Date time of Lastship Date.    # noqa: E501

        :param last_ship_date: The last_ship_date of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :type: datetime
        """

        self._last_ship_date = last_ship_date

    @property
    def last_ship_date_epoch(self):
        """Gets the last_ship_date_epoch of this NiaapiSoftwareEolAllOf.  # noqa: E501

        Epoch time of Lastship Date.    # noqa: E501

        :return: The last_ship_date_epoch of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :rtype: int
        """
        return self._last_ship_date_epoch

    @last_ship_date_epoch.setter
    def last_ship_date_epoch(self, last_ship_date_epoch):
        """Sets the last_ship_date_epoch of this NiaapiSoftwareEolAllOf.

        Epoch time of Lastship Date.    # noqa: E501

        :param last_ship_date_epoch: The last_ship_date_epoch of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :type: int
        """

        self._last_ship_date_epoch = last_ship_date_epoch

    @property
    def migration_url(self):
        """Gets the migration_url of this NiaapiSoftwareEolAllOf.  # noqa: E501

        The URL of this migration notice.    # noqa: E501

        :return: The migration_url of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :rtype: str
        """
        return self._migration_url

    @migration_url.setter
    def migration_url(self, migration_url):
        """Sets the migration_url of this NiaapiSoftwareEolAllOf.

        The URL of this migration notice.    # noqa: E501

        :param migration_url: The migration_url of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :type: str
        """

        self._migration_url = migration_url

    @property
    def software_eol_url(self):
        """Gets the software_eol_url of this NiaapiSoftwareEolAllOf.  # noqa: E501

        Software end of life notice URL link to the notice webpage.     # noqa: E501

        :return: The software_eol_url of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :rtype: str
        """
        return self._software_eol_url

    @software_eol_url.setter
    def software_eol_url(self, software_eol_url):
        """Sets the software_eol_url of this NiaapiSoftwareEolAllOf.

        Software end of life notice URL link to the notice webpage.     # noqa: E501

        :param software_eol_url: The software_eol_url of this NiaapiSoftwareEolAllOf.  # noqa: E501
        :type: str
        """

        self._software_eol_url = software_eol_url

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(
                    map(lambda x: x.to_dict()
                        if hasattr(x, "to_dict") else x, value))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(
                    map(
                        lambda item: (item[0], item[1].to_dict())
                        if hasattr(item[1], "to_dict") else item,
                        value.items()))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, NiaapiSoftwareEolAllOf):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, NiaapiSoftwareEolAllOf):
            return True

        return self.to_dict() != other.to_dict()
